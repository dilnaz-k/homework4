total = 0
for i in range(1, 5):
    total += i
print(total)
total2 = 0
i1 = 0
while i1 < 5:
    total2 += i1
    i1 += 1
print(total2)
my_list = [7, 5, 4, 4, 3, 2, 1]
total3 = 0
i2 = 0
while i2 < len(my_list) and my_list[i2] > 0:
    total3 += my_list[i2]
    i2 += 1

total4 = 0
for element in my_list:
    if element <= 0:
        break

    total4 += element
print(total4)
print(total3)

total5 = 0
i5 = 0
while total5 < 10 and my_list[i5] > 0:
    total5 += my_list[i5]
    i5 += 1
print(total5)

i6 = 0
while True:
    if i6 == 100:
        break

    print(i6)
    i6 += 1
my_list = [7, 5, 4, 4, 3, 2, 1, -5, -10, -15, -18]

total6 = 0
i6 = len(my_list) - 1

while i6 >= 0 and my_list[i6] < 0:
    total6 += my_list[i6]
    i6 -= 1

print(total6)
total7 = 0
for i in range(len(my_list) - 1, -1, -1):
    if my_list[i] > 0:
        break

    total7 += my_list[i]
print(total7)

words = ['apple', 'banana', 'grape', 'stop']
i8 = 0
while words[i8] != 'stop':
    print(words[i8])

    i8 += 1

for i in range(len(words)):
    if words[i] == 'stop':
        break

    print(words[i])

names = ['Katy', 'Alex', 'Mary', 'Sean', 'Anna']
for element in names:
    print(element)

for i in range(len(names)):
    print(names[i])

for i in range(len(names)):
    for j in range(i + 1):
        print(names[i])

d = {'Alex': 25, 'Peter': 37}
print(d)
print(len(d))
d['Katya'] = 18
print(d)
print(d['Peter'])
print(d['Alex'])

print(d['Katya'])
d['Katya'] = 24
print(d['Katya'])
d[10] = 20
print(d)

for k, v in d.items():
    print(k)
    print(v)

for key, value in d.items():
    print('Ключ: ' + str(key) + ', значение: ' + str(value))

a = ['first', 1, 2, 3, 'second', 10, 20, 'third', 15, 56, 70, 'fourth', -50]
c = {}
r = None
for e in a:
    if isinstance(e, str):
        c[e] = []
        r = e
    else:
        c[r].append(e)

print(c)

my_text = 'Привет как дела пока как жизнь пока стол арбуз привет арбуз'
my_text.split(' ')


d = [16, 22, 5, 6, 9, 12, 1, 19, 2, 25, 30]
d = sorted(d)
print(d)





#// - целочисленное деление
#len - длина списка(массива, листа)
#def - объект принимающий аргументы и возвращающий значения
#lower_bound - нижняя граница поиска
#upper_bound - верхняя граница поиска
#array - аргумент, обозначающий список
#key - аргумент, обозначающий то что вам нужно найти

def binary_search(array, key):
    lower_bound = 0
    upper_bound = len(array) - 1

    while lower_bound <= upper_bound:
        center = (lower_bound + upper_bound) // 2

        if array[center] == key:
            return center
        elif array[center] > key:
            upper_bound = center - 1
        elif array[center] < key:
            lower_bound = center + 1

    return 'not found'

print(binary_search(d, 3))
